plugins {
    id "java-library"
    id 'java-test-fixtures'
    id 'fcgi-with-graal.java-conventions'
}

configurations {
    testFixturesImplementation.extendsFrom(implementation)
    testFixturesAnnotationProcessor.extendsFrom(annotationProcessor)
}

dependencies {
    implementation project(":cgi-api")    
    implementation project(":libfcgi-graal")
    implementation group: "javax.inject", name: "javax.inject", version: "1"
    
    def micronautVersion = "3.5.1"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor "io.micronaut:micronaut-inject-java"

    implementation "io.micronaut:micronaut-inject"

    implementation "io.micronaut:micronaut-context"
    implementation "io.micronaut:micronaut-http-server"
    implementation "io.micronaut:micronaut-router"

    implementation "io.micronaut:micronaut-inject-java"

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation(testFixtures(project(":cgi-api")))
    implementation(project(":standalone"))

    implementation("io.projectreactor:reactor-core")
    implementation("io.micronaut.servlet:micronaut-servlet-core")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }

    implementation("io.netty:netty-codec-http:4.1.78.Final")
    implementation("ch.qos.logback:logback-classic:1.2.11")
    implementation 'org.ethelred:ethelred_util:0.4'

}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-XprintProcessorInfo', '-XprintRounds']
}