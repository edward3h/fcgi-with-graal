plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.1"
    id 'fcgi-with-graal.java-conventions'
}

version = "0.1"
group = "org.ethelred.techtest.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    // runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.ethelred.techtest.micronaut.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("org.mariadb.jdbc:mariadb-java-client")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mariadb")
    testImplementation("org.testcontainers:testcontainers")
    // implementation("io.micronaut:micronaut-validation")
    implementation 'com.github.vatbub:randomusers:1.4'
    implementation 'net.datafaker:datafaker:1.9.0'
    implementation group: "javax.inject", name: "javax.inject", version: "1"
    runtimeOnly(project(":cgi-micronaut"))
}


application {
    mainClass.set("org.ethelred.techtest.micronaut.Application")
    applicationDefaultJvmArgs = ['-Dcgi.server=standalone']
}



